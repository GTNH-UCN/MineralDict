name: Auto Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1. 生成版本号
      - name: Generate Version
        id: genversion
        run: |
          TimeVersion="$(TZ=Asia/Shanghai date '+%Y.%m.%d-%H.%M.%S')"
          echo "TimeVersion=$TimeVersion" >> $GITHUB_ENV
          echo "Generated version: $TimeVersion"

      # 2. 检出代码
      - name: Check out
        uses: actions/checkout@v3

      # 3. 安装 .NET 8
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 4. 构建项目
      - name: Build
        run: dotnet build ./GTNH-MineralDict/GTNH-MineralDict.csproj -c Release

      # 5. 运行程序生成文件
      - name: Run Program
        run: |
          cd ./GTNH-MineralDict/bin/Release/net8.0
          ./GTNH-MineralDict
          ls -R

      # 6. 检查生成的文件
      - name: Check Generated Files
        run: |
          echo "当前目录结构："
          ls -R
          echo "查找 Artifacts 目录："
          find . -name "Artifacts" -type d

      # 7. 创建临时目录并复制文件，然后打包
      - name: Prepare and Zip Release Files
        run: |
          mkdir -p ./release-files
          cp -r ./GTNH-MineralDict/bin/Release/net8.0/Artifacts/* ./release-files/ || true
          cd ./release-files
          zip -r ../MineralDict-${{ env.TimeVersion }}.zip ./*
          cd ..
          echo "打包后的文件："
          ls -lh MineralDict-${{ env.TimeVersion }}.zip

      # 8. 创建 GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: MineralDict-${{ env.TimeVersion }}
          name: MineralDict ${{ env.TimeVersion }}
          body: |
            自动构建版本: ${{ env.TimeVersion }}
            构建时间（北京时间）: ${{ env.TimeVersion }}
          files: |
            ./MineralDict-${{ env.TimeVersion }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}